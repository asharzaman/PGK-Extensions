<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PGK.Extensions.Windows</name>
    </assembly>
    <members>
        <member name="T:BitmapSourceExtensions">
            <summary>
              Extension methods for the System.Windows.Media.Imaging.BitmapSource class
            </summary>
        </member>
        <member name="M:BitmapSourceExtensions.ToBitmap(System.Windows.Media.Imaging.BitmapSource)">
            <summary>
              Create a System.Drawing.Bitmap from the passed WPF BitmapSource instance
            </summary>
            <param name = "bitmapSource">The bitmap source.</param>
            <returns>The generated bitmap</returns>
        </member>
        <member name="M:ButtonExtension.RemoveClickEvent(System.Windows.Controls.Button)">
            <summary>
            Removes click event from button
            </summary>
            <param name="btn"></param>
        </member>
        <member name="M:CanvasExtension.AddChild``1(System.Windows.Controls.Canvas,``0)">
            <summary>
            Adds child control to canvas
            </summary>
            <typeparam name="T">Child Type to be added</typeparam>
            <param name="canvas">Parent canvas</param>
            <param name="control">Element to be added</param>
        </member>
        <member name="M:CanvasExtension.RemoveChild``1(System.Windows.Controls.Canvas,``0)">
            <summary>
            Removes child control from canvas
            </summary>
            <typeparam name="T">Child Type to be removed</typeparam>
            <param name="canvas">Parent canvas</param>
            <param name="control">Child to be removed</param>
        </member>
        <member name="M:CanvasExtension.InsertChild``1(System.Windows.Controls.Canvas,System.Int32,``0)">
            <summary>
            Inserts child control from canvas
            </summary>
            <typeparam name="T">Child Type to be inserted</typeparam>
            <param name="canvas">Parent canvas</param>
            <param name="index">Index of child to be added</param>
            <param name="control">Child to be inserted</param>
        </member>
        <member name="M:CanvasExtension.GetCanvasLeft``1(``0)">
            <summary>
            Gets Canvas Left Position
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:CanvasExtension.GetCanvasTop``1(``0)">
            <summary>
            Get Canvas Top
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:CanvasExtension.GetCanvasPosition``1(``0)">
            <summary>
            Gets Canvas position
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:CanvasExtension.SetCanvasLeft``1(``0,System.Double)">
            <summary>
            Set Canvas left position
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control"></param>
            <param name="length"></param>
        </member>
        <member name="M:ControlExtension.DumpControlTemplate(System.Windows.Controls.Control)">
            <summary>
            Dump Control Templates of WPF Controls
            </summary>
            <param name="ctrl">Control whose xaml content of ControlTemplate has to fethced</param>
            <returns>XAML representation of Control Template of the control</returns>
        </member>
        <member name="M:DependencyObjectExtensions.FindParent``1(System.Windows.DependencyObject)">
            <summary>
            Finds immediate parent of the child control 
            </summary>
            <typeparam name="T">Finds specific Type of parent control</typeparam>
            <param name="child">Child control in use</param>
            <returns></returns>
        </member>
        <member name="M:DependencyObjectExtensions.FindChild``1(System.Windows.DependencyObject,System.String)">
            <summary>
            Finds child of specific type of specific name
            </summary>
            <typeparam name="T">Type of child</typeparam>
            <param name="parent">Current parent control</param>
            <param name="childName">Name of the child control to be found</param>
            <returns></returns>
        </member>
        <member name="M:DependencyObjectExtensions.GetVisualChildCollection``1(System.Windows.DependencyObject)">
            <summary>
            Get collection of child controls of specific types
            </summary>
            <typeparam name="T">Type of controls to be fetched</typeparam>
            <param name="parent">Current parent</param>
            <returns></returns>
        </member>
        <member name="M:DispatcherExtension.InvokeAction(System.Windows.Threading.Dispatcher,System.Action,System.Windows.Threading.DispatcherPriority)">
            <summary>
            Invokes the specified <paramref name="action"/> on the given <paramref name="dispatcher"/>.
            </summary>
            <param name="dispatcher">The dispatcher on which the <paramref name="action"/> executes.</param>
            <param name="action">The <see cref="T:System.Action"/> to execute.</param>
            <param name="priority">The <see cref="T:System.Windows.Threading.DispatcherPriority"/>.  Defaults to <see cref="F:System.Windows.Threading.DispatcherPriority.ApplicationIdle"/></param>
        </member>
        <member name="M:DispatcherExtension.InvokeAction``1(System.Windows.Threading.Dispatcher,System.Action{``0},``0,System.Windows.Threading.DispatcherPriority)">
            <summary>
            Invokes the specified <paramref name="action"/> on the given <paramref name="dispatcher"/>.
            </summary>
            <typeparam name="T">The type of the argument of the <paramref name="action"/>.</typeparam>
            <param name="dispatcher">The dispatcher on which the <paramref name="action"/> executes.</param>
            <param name="action">The <see cref="T:System.Action`1"/> to execute.</param>
            <param name="arg">The first argument of the action.</param>
            <param name="priority">The <see cref="T:System.Windows.Threading.DispatcherPriority"/>.  Defaults to <see cref="F:System.Windows.Threading.DispatcherPriority.ApplicationIdle"/></param>
        </member>
        <member name="M:DispatcherExtension.InvokeAction``2(System.Windows.Threading.Dispatcher,System.Action{``0,``1},``0,``1,System.Windows.Threading.DispatcherPriority)">
            <summary>
            Invokes the specified <paramref name="action"/> on the given <paramref name="dispatcher"/>.
            </summary>
            <typeparam name="T1">The type of the first argument of the <paramref name="action"/>.</typeparam>
            <typeparam name="T2">The type of the second argument of the <paramref name="action"/>.</typeparam>
            <param name="dispatcher">The dispatcher on which the <paramref name="action"/> executes.</param>
            <param name="action">The <see cref="T:System.Action`2"/> to execute.</param>
            <param name="arg1">The first argument of the action.</param>
            <param name="arg2">The second argument of the action.</param>
            <param name="priority">The <see cref="T:System.Windows.Threading.DispatcherPriority"/>.  Defaults to <see cref="F:System.Windows.Threading.DispatcherPriority.ApplicationIdle"/></param>
        </member>
        <member name="M:DispatcherExtension.InvokeAction``3(System.Windows.Threading.Dispatcher,System.Action{``0,``1,``2},``0,``1,``2,System.Windows.Threading.DispatcherPriority)">
            <summary>
            Invokes the specified <paramref name="action"/> on the given <paramref name="dispatcher"/>.
            </summary>
            <typeparam name="T1">The type of the first argument of the <paramref name="action"/>.</typeparam>
            <typeparam name="T2">The type of the second argument of the <paramref name="action"/>.</typeparam>
            <typeparam name="T3">The type of the third argument of the <paramref name="action"/>.</typeparam>
            <param name="dispatcher">The dispatcher on which the <paramref name="action"/> executes.</param>
            <param name="action">The <see cref="T:System.Action`3"/> to execute.</param>
            <param name="arg1">The first argument of the action.</param>
            <param name="arg2">The second argument of the action.</param>
            <param name="arg3">The third argument of the action.</param>
            <param name="priority">The <see cref="T:System.Windows.Threading.DispatcherPriority"/>.  Defaults to <see cref="F:System.Windows.Threading.DispatcherPriority.ApplicationIdle"/></param>
        </member>
        <member name="M:DispatcherExtension.InvokeAction``1(System.Windows.Threading.DispatcherObject,System.Func{``0})">
            <summary>
            Invokes the specified <paramref name="func"/> on the given <paramref name="source"/>.
            </summary>
            <typeparam name="TResult">Output of the function</typeparam>
            <param name="source">Current Source</param>
            <param name="func">Func to be invoked </param>
            <returns>Returns the invoked Func output</returns>
        </member>
        <member name="M:DispatcherExtension.InvokeAction``2(``0,System.Func{``0,``1})">
            <summary>
            Invokes the specified <paramref name="func"/> on the given <paramref name="source"/>.
            </summary>
            <typeparam name="TResult">Output of the function</typeparam>
            <param name="source">Current Source</param>
            <param name="func">Func to be invoked </param>
            <returns>Returns the invoked Func output</returns>
        </member>
        <member name="M:DispatcherExtension.InvokeAction``3(``0,System.Func{``0,``1,``2},``1)">
            <summary>
            Invokes the specified <paramref name="func"/> on the given <paramref name="source"/>.
            </summary>
            <typeparam name="TResult">Output of the function</typeparam>
            <param name="source">Current Source</param>
            <param name="func">Func to be invoked </param>
            <returns>Returns the invoked Func output</returns>
        </member>
        <member name="M:DispatcherExtension.InvokeAction``4(``0,System.Func{``0,``1,``2,``3},``1,``2)">
            <summary>
            Invokes the specified <paramref name="func"/> on the given <paramref name="source"/>.
            </summary>
            <typeparam name="TResult">Output of the function</typeparam>
            <param name="source">Current Source</param>
            <param name="func">Func to be invoked </param>
            <returns>Returns the invoked Func output</returns>
        </member>
        <member name="M:DispatcherExtension.InvokeAction``5(``0,System.Func{``0,``1,``2,``3,``4},``1,``2,``3)">
            <summary>
            Invokes the specified <paramref name="func"/> on the given <paramref name="source"/>.
            </summary>
            <typeparam name="TResult">Output of the function</typeparam>
            <param name="source">Current Source</param>
            <param name="func">Func to be invoked </param>
            <returns>Returns the invoked Func output</returns>
        </member>
        <member name="M:DispatcherExtension.InvokeAction(System.Windows.Threading.DispatcherObject,System.Action)">
            <summary>
            Invokes the specified <paramref name="func"/> on the given <paramref name="source"/>.
            </summary>
            <typeparam name="TResult">Output of the function</typeparam>
            <param name="source">Current Source</param>
            <param name="func">Func to be invoked </param>
            <returns>Returns the invoked Func output</returns>
        </member>
        <member name="M:FrameworkElementExtension.BringToFront(System.Windows.FrameworkElement)">
            <summary>
            Brings the control to front by setting maximum z index
            </summary>
            <param name="control">Current Element</param>
        </member>
        <member name="T:UIElementExtensions">
            <summary>
              Extension methods for the System.Windows.UIElement class
            </summary>
        </member>
        <member name="M:UIElementExtensions.RenderToBitmap(System.Windows.UIElement)">
            <summary>
              Renders the ui element into a bitmap frame.
            </summary>
            <param name = "element">The UI element.</param>
            <returns>The created bitmap frame</returns>
        </member>
        <member name="M:UIElementExtensions.RenderToBitmap(System.Windows.UIElement,System.Double)">
            <summary>
              Renders the ui element into a bitmap frame using the specified scale.
            </summary>
            <param name = "element">The UI element.</param>
            <param name = "scale">The scale (default: 1).</param>
            <returns>The created bitmap frame</returns>
        </member>
        <member name="M:UIElementExtensions.SendToFront(System.Windows.Controls.UIElementCollection,System.Windows.UIElement)">
            <summary>
            Brings  the control in the control collection to top
            </summary>
            <param name="collection">UI Collection</param>
            <param name="control">Element to be brought to front</param>
        </member>
        <member name="M:WindowExtensions.SetInitialFocus(System.Windows.Window,System.Windows.Controls.Control)">
            <summary>
            Set the initial focus on the given control
            </summary>
            <param name="window">Childwindow for which te focus must be set</param>
            <param name="focus">Control to set the focus on</param>
        </member>
    </members>
</doc>
